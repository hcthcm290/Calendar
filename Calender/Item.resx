<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="edit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAFESURBVDhPldTNK0RhFMfx2SgW3vIv2Vkot7wspkjYKxt7
        URbIWyQvkaRQ/hIiSTORFGbhX+B7pvtM5zlzZu5j8am5v3vOr2dx5ykNDmWeDmQ4xB0+8YV7nGAcnWja
        bQowhgf8FnhCGdF+9IBVeMvtbKLRoctW4C2kWEdUOAxvsJUdLJhsAvXCLrzlYYpdhIPM55n4Rp+EIyos
        UsUZQuEy9PuyhKcmbOUCvVjDNpZgZ26k8NGEnmuEU4kXeHMVeVkzoWXLtuDNiVpRoS07hjcX1Avli/de
        2rIDeHNaVQbPTSj+e7LgVoblv6vDd+iylJMF07LQjQ8VLkJyuXGO8izFDwbCKUbzUMxCSlNuHG0S0eWw
        AW8wxR7qPbpQyFXkLbSzj0aHLgumUIG3rL1iDtF+9KD0QIov8Qy5SYT8vsIM+mH2stIfgT11vRWiO0kA
        AAAASUVORK5CYII=
</value>
  </data>
  <data name="tick.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAATCAYAAABlcqYFAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAAqZJREFUSEutlWtLolEQx+fDBWkQIt4gIhTxEiuElqBvXJN9ldrrvb3ZZVn2IwQh
        iN28pZbXMvGGSiBS0g1R3PM/8LitnqitfWCQh2fO/Gb+M3OkRqNB5XKZisUihcNh2t/fp2w2S6lUinZ3
        d+ng4ICOj4/p8PCQMpkMnZycUCKRoGQySel0muLxOPeFz+npKd3d3ZHRaPy8sLDwtdVqUalUov8CwTti
        DIdDWl5e9hLRGLa0tPTh9vb27ZBoNMrPooL37JEAkqnV6m9vgsDy+TyNx2PS6XQzABiT7eerIZAJevd6
        PfL5fBOJHtvGxoYfCXDI+fk5t729PW7PQSBRoVDgFWg0GmEFc3NzW/je7/eJqtUq1et1ur6+5tXEYjEe
        6CkI+pDL5XgFXvaIAC6XKyCp02w2ibrdLs9Ir9d/USqVH/FeqVS4JNMQ/KJi+K+srAgrkMlkXCLIiYox
        xvyA3W6fHDCZTN7BYEBnZ2e0s7MzgUBGZIdva2trm48DS8Yq8Lfbbe6HBDEYHMIq+DTt7HQ6fQ8PD5Me
        oSrINBqNaH19XSiRXC7nFUBKSB0Khf5A2Bz/Eh1icO/V1RUHYBBQwerqqlAih8MRhMyoHkmhp39BQF9c
        XAyIDlut1s2bmxvuY7PZhBKxs9vYdEiEoUHvZiCYrk6nAxm2RUHcbvc7j8djE30zm80BTCUWEgBpQGYg
        0FraWradQVEwkRkMhiDGGD04OjriAZ+EQG9s+cXFBaEHrOnPglQqlR8SITn0AOP6LETKBCBUpNVqhT2C
        sSYHLi8v+bWOgLAXQ7DNcEaP7u/vie2LfxqgUCgCSAJ3ViQSmTT6nyBwggMMO2GxWLYkABtfP+TEVQF/
        BHs1BI3EbVyr1QgLOT8//50NxA/8+cAHgRH05ZAW/QaXktRFeaYa8wAAAABJRU5ErkJggg==
</value>
  </data>
</root>